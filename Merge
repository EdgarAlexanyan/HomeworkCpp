#include <iostream>
#include <vector>

void input_vec(std::vector<int>&, unsigned long int);
void sort_vec(std::vector<int>&, unsigned long int);
void merge(std::vector<int>&, std::vector<int>&, unsigned long int);
void print_vec(std::vector<int>&);

int main ()
{
    unsigned long int size1 = 0;
    unsigned long int size2 = 0;
    std::cout << "Please input size of first array" << std::endl;
    std::cin >> size1;
    std::cout << "Please input size of second array" << std::endl;
    std::cin >> size2;

    std::vector<int> vec1(size1 + size2, 0);
    std::vector<int> vec2(size2, 0);

    input_vec(vec1, size1);
    input_vec(vec2, size2);
    sort_vec(vec1, size1);
    sort_vec(vec2, size2);
    merge(vec1, vec2, size1);
    print_vec(vec1);

    return 0;
}

void input_vec (std::vector<int>& vec, unsigned long int size)
{
    std::cout << "Enter elements of array" << std::endl;
    for (int i = 0; i < size; ++i)
    {
      std::cin >> vec[i];
    }
}

void sort_vec (std::vector<int>& vec, unsigned long int size)
{
    int tmp = 0;
    for (int i = 0; i < size; ++i)
    {
        for (int j = 0; j < (size - 1 - i); ++j)
        {
            if (vec[j] > vec[j + 1])
            {
                tmp = vec[j];
                vec[j] = vec[j + 1];
                vec[j + 1] = tmp;
            }
        }
  }
}

void merge (std::vector<int>& vec1, std::vector<int>& vec2, unsigned long int size1)
{
    int tmp = 0;
    int j = 0;
    while (j < vec2.size())
    {
          for (int i = 0; i < size1; ++i)
          {
              if (vec1[i] > vec2[j])
              {
                  tmp = vec2[j];
                  vec2[j] = vec1[i];
                  vec1[i] = tmp;
              }
          }

          tmp = vec1[size1];
          vec1[size1] = vec2[j];
          vec2[j] = tmp;
          ++size1;
          ++j;
    }
}
    
void print_vec (std::vector<int>& vec)
{
    std::cout << "Your merged array" << std::endl;
    for (int i = 0; i < vec.size(); ++i)
    {
        std::cout << vec[i] << " ";
    }
}
